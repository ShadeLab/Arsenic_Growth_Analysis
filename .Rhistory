V2=dist(no_A, diag=TRUE, upper=TRUE)
a=as.matrix(V2)
hc=hclust(V2)
plot(hc)
V2=dist(no_y, diag=TRUE, upper=TRUE)
a=as.matrix(V2)
hc=hclust(V2)
plot(hc)
V2=dist(no_i, diag=TRUE, upper=TRUE)
a=as.matrix(V2)
hc=hclust(V2)
plot(hc)
V2=dist(As3, diag=TRUE, upper=TRUE)
a=as.matrix(V2)
hc=hclust(V2)
plot(hc)
V2=dist(mu, diag=TRUE, upper=TRUE)
a=as.matrix(V2)
hc=hclust(V2)
plot(hc)
V2=dist(A, diag=TRUE, upper=TRUE)
a=as.matrix(V2)
hc=hclust(V2)
plot(hc)
V2=dist(y, diag=TRUE, upper=TRUE)
a=as.matrix(V2)
hc=hclust(V2)
plot(hc)
V2=dist(i, diag=TRUE, upper=TRUE)
a=as.matrix(V2)
hc=hclust(V2)
plot(hc)
V2=dist(i, diag=TRUE, upper=TRUE)
a=as.matrix(V2)
hc=hclust(V2)
plot(hc)
View(As5)
no_mu=As5[,-c(1:7)]
no_A=As5[,-c(8:14)]
no_y=As5[,-c(15:21)]
no_i=As5[,-c(22:28)]
mu=As5[,c(1:7)]
A=As5[,c(8:14)]
y=As5[,c(15:21)]
i=As5[,c(22:28)]
V2=dist(As5, diag=TRUE, upper=TRUE)
a=as.matrix(V2)
hc=hclust(V2)
plot(hc)
V2=dist(no_mu, diag=TRUE, upper=TRUE)
a=as.matrix(V2)
hc=hclust(V2)
plot(hc)
V2=dist(no_A, diag=TRUE, upper=TRUE)
a=as.matrix(V2)
hc=hclust(V2)
plot(hc)
V2=dist(no_y, diag=TRUE, upper=TRUE)
a=as.matrix(V2)
hc=hclust(V2)
plot(hc)
V2=dist(no_i, diag=TRUE, upper=TRUE)
a=as.matrix(V2)
hc=hclust(V2)
plot(hc)
V2=dist(mu, diag=TRUE, upper=TRUE)
a=as.matrix(V2)
hc=hclust(V2)
plot(hc)
V2=dist(A, diag=TRUE, upper=TRUE)
a=as.matrix(V2)
hc=hclust(V2)
plot(hc)
V2=dist(y, diag=TRUE, upper=TRUE)
a=as.matrix(V2)
hc=hclust(V2)
plot(hc)
V2=dist(i, diag=TRUE, upper=TRUE)
a=as.matrix(V2)
hc=hclust(V2)
plot(hc)
V2=dist(A2, diag=TRUE, upper=TRUE)
a=as.matrix(V2)
hc=hclust(V2)
plot(hc)
V2=dist(A2, diag=TRUE, upper=TRUE)
a=as.matrix(V2)
hc=hclust(V2)
plot(hc)
V3=heatmap(A2)
View(A2)
V3=heatmap(V2)
V3=heatmap(a)
b=dist(data, diag=TRUE, upper=TRUE)
c=as.matrix(b)
V3=heatmap(a)
V3=heatmap(c)
b=dist(As5, diag=TRUE, upper=TRUE)
c=as.matrix(b)
V3=heatmap(c)
b=dist(As3, diag=TRUE, upper=TRUE)
c=as.matrix(b)
V3=heatmap(c)
b=dist(mu, diag=TRUE, upper=TRUE)
c=as.matrix(b)
V3=heatmap(c)
b=dist(A, diag=TRUE, upper=TRUE)
c=as.matrix(b)
V3=heatmap(c)
library(ggplot2)
library(grofit)
library(dplyr)
library(reshape2)
library(data.table)
library(vegan)
#read in data by calling on files with "results" in the name, and combine all data from separate experiments
data=data.frame(do.call(rbind, lapply(list.files(pattern="*results"), read.csv)))
#remove unnecessary first column
data=data[-1]
#remove all model data since we are using spline
data=data[,-grep("model", names(data))]
data=data[,-grep(".bt", names(data))]
data=data[,-grep("log.", names(data))]
data=data[,-grep("nboot", names(data))]
#add binary column to describe yes/no growth
data$growth=as.integer(data$reliability=="TRUE")
#remove unnecessary reliability column
data=data[,-4]
#Average data for each variable before melting
data=data %>%
group_by(TestId, AddId, concentration) %>%
summarise(mu=mean(mu.spline),
A=mean(A.spline),
lambda=mean(lambda.spline),
integral=mean(integral.spline),
growth=mean(growth))
#Call samples with 1/3 growing no growth
data$growth[data$growth<0.4]=0
#Call parameters NA for no growth
data$A[data$growth==0]=NA
data$mu[data$growth==0]=NA
data$integral[data$growth==0]=NA
data$lambda[data$growth==0]=NA
#remove negative control data
data=data[!(data$TestId=="NEG"),]
#normalize data to growth without arsenic
normalization=subset(data, concentration %in% 0)
normalization=normalization[,-3]
data=inner_join(data, normalization, by = c("TestId", "AddId"))
data=data %>%
group_by(TestId, AddId, concentration) %>%
summarise(mu=mu.x/mu.y,
A=A.x/A.y,
lambda=lambda.x/lambda.y,
integral=integral.x/integral.y,
growth=growth.x)
#remove rows with no arsenic (controls)
data=data[!(data$concentration=="0"),]
#widen data set so that concentrations and their corresponding variables are listed horizontally
data=dcast(setDT(data), formula= TestId ~ AddId + concentration, value.var=c("mu", "A", "lambda", "integral", "growth"))
#make variable ID the row name
data=data.frame(data, row.names=data[,1])
#temporarily remove growth data (we do not need to scale this)
growth=data[,grep("growth", names(data))]
data=data.frame(data[,-grep("growth", names(data))])
b=dist(data, diag=TRUE, upper=TRUE)
c=as.matrix(b)
V3=heatmap(c)
install.packages("gplots")
library(gplots)
heatmap.2(data)
heatmap.2(c)
As3=A2[,!colnames(data) %in% grep("V", colnames(A2), value=TRUE)]
As5=A2[,!colnames(data) %in% grep("III", colnames(A2), value=TRUE)]
b=dist(As5, diag=TRUE, upper=TRUE)
c=as.matrix(b)
V3=heatmap(c)
heatmap.2(c)
V3=heatmap(c)
no_mu=As5[,-c(1:7)]
no_A=As5[,-c(8:14)]
no_y=As5[,-c(15:21)]
no_i=As5[,-c(22:28)]
mu=As5[,c(1:7)]
A=As5[,c(8:14)]
y=As5[,c(15:21)]
i=As5[,c(22:28)]
b=dist(mu, diag=TRUE, upper=TRUE)
c=as.matrix(b)
V3=heatmap(c)
heatmap.2(c)
#normalize the growth parameters to growth at 0mM arsenic and average them
A=decostand(data, method="standardize")
A2=cbind(A, growth)
#separate arsenate and arsenite
As3=A2[,!colnames(data) %in% grep("V", colnames(A2), value=TRUE)]
As5=A2[,!colnames(data) %in% grep("III", colnames(A2), value=TRUE)]
#For fun try the dendogram with parameters removed
no_mu=A2[,-c(1:16)]
no_A=A2[,-c(17:32)]
no_y=A2[,-c(33:48)]
no_i=A2[,-c(49:64)]
#try with AsV
no_mu=As5[,c(1:8)]
no_A=As3[,-c(10:18)]
no_y=As3[,-c(19:27)]
no_i=As3[,-c(28:36)]
#yayay
no_mu=As5[,-c(1:7)]
no_A=As5[,-c(8:14)]
no_y=As5[,-c(15:21)]
no_i=As5[,-c(22:28)]
mu=As5[,c(1:7)]
A=As5[,c(8:14)]
y=As5[,c(15:21)]
i=As5[,c(22:28)]
View(i)
b=dist(i, diag=TRUE, upper=TRUE)
c=as.matrix(b)
heatmap.2(c)
b=dist(A, diag=TRUE, upper=TRUE)
c=as.matrix(b)
V3=heatmap(c)
heatmap.2(c)
b=dist(mu, diag=TRUE, upper=TRUE)
c=as.matrix(b)
V3=heatmap(c)
heatmap.2(c)
heatmap.2(c, trace="none")
heatmap.2(c, trace="none", col=rainbow(20))
heatmap.2(c, trace="none", col=rainbow(15))
heatmap.2(c, trace="none", col=bluered(15))
heatmap.2(c, trace="none", col=bluered(50))
heatmap.2(c, trace="none", col=bluered(100))
heatmap.2(c, trace="none", col=bluered(100))
heatmap.2(c, trace="none", col=bluered(50))
heatmap.2(c[ord,], Rowv = F,dendrogram = "column", trace="none", col=bluered(50))
ord=order(rowSums(abs(c)), decreasing=T)
heatmap.2(c[ord,], Rowv = F,dendrogram = "column", trace="none", col=bluered(50))
heatmap.2(c[ord,], Rowv = F, Colv="NA", dendrogram = "column", trace="none", col=bluered(50))
b=dist(As3, diag=TRUE, upper=TRUE)
c=as.matrix(b)
heatmap.2(c[ord,], Rowv = F, Colv="NA", dendrogram = "column", trace="none", col=bluered(50))
heatmap.2(c[ord,], Rowv = F, Colv="NA", dendrogram = "row", trace="none", col=bluered(50))
heatmap.2(c[ord,], dendrogram = "row", trace="none", col=bluered(50))
heatmap.2(c[ord,], dendrogram = "row", trace="none", col=bluered(20))
ord=order(rowSums(abs(c)), decreasing=T)
heatmap.2(c[ord,], dendrogram = "row", trace="none", col=bluered(20))
b=dist(As3, diag=TRUE, upper=TRUE)
c=as.matrix(b)
V3=heatmap(c)
ord=order(rowSums(abs(c)), decreasing=T)
heatmap.2(c[ord,], dendrogram = "row", trace="none", col=bluered(20))
c=hclust(c)
b=dist(As3, diag=TRUE, upper=TRUE)
c=as.matrix(b)
c=hclust(c)
View(As3)
library(ggplot2)
library(grofit)
library(dplyr)
library(reshape2)
library(data.table)
library(vegan)
#read in data by calling on files with "results" in the name, and combine all data from separate experiments
data=data.frame(do.call(rbind, lapply(list.files(pattern="*results"), read.csv)))
#remove unnecessary first column
data=data[-1]
#remove all model data since we are using spline
data=data[,-grep("model", names(data))]
data=data[,-grep(".bt", names(data))]
data=data[,-grep("log.", names(data))]
data=data[,-grep("nboot", names(data))]
#add binary column to describe yes/no growth
data$growth=as.integer(data$reliability=="TRUE")
#remove unnecessary reliability column
data=data[,-4]
#Average data for each variable before melting
data=data %>%
group_by(TestId, AddId, concentration) %>%
summarise(mu=mean(mu.spline),
A=mean(A.spline),
lambda=mean(lambda.spline),
integral=mean(integral.spline),
growth=mean(growth))
#Call samples with 1/3 growing no growth
data$growth[data$growth<0.4]=0
#Call parameters NA for no growth
data$A[data$growth==0]=NA
data$mu[data$growth==0]=NA
data$integral[data$growth==0]=NA
data$lambda[data$growth==0]=NA
#remove negative control data
data=data[!(data$TestId=="NEG"),]
#normalize data to growth without arsenic
normalization=subset(data, concentration %in% 0)
normalization=normalization[,-3]
data=inner_join(data, normalization, by = c("TestId", "AddId"))
data=data %>%
group_by(TestId, AddId, concentration) %>%
summarise(mu=mu.x/mu.y,
A=A.x/A.y,
lambda=lambda.x/lambda.y,
integral=integral.x/integral.y,
growth=growth.x)
#remove rows with no arsenic (controls)
data=data[!(data$concentration=="0"),]
#widen data set so that concentrations and their corresponding variables are listed horizontally
data=dcast(setDT(data), formula= TestId ~ AddId + concentration, value.var=c("mu", "A", "lambda", "integral", "growth"))
#make variable ID the row name
data=data.frame(data, row.names=data[,1])
#temporarily remove growth data (we do not need to scale this)
growth=data[,grep("growth", names(data))]
data=data.frame(data[,-grep("growth", names(data))])
#Scale data
V=scale(data)
#OR
A=decostand(data, method="standardize")
A2=cbind(A, growth)
#separate arsenate and arsenite
As3=A2[,!colnames(data) %in% grep("V", colnames(A2), value=TRUE)]
As5=A2[,!colnames(data) %in% grep("III", colnames(A2), value=TRUE)]
b=dist(As3, diag=TRUE, upper=TRUE)
c=as.matrix(b)
c=hclust(c)
V2=dist(A2, diag=TRUE, upper=TRUE)
a=as.matrix(V2)
hc=hclust(V2)
plot(hc)
c=hclust(b)
heatmap.2(c[ord,], dendrogram = "row", trace="none", col=bluered(20))
heatmap.2(c, dendrogram = "row", trace="none", col=bluered(20))
test=heatmap.2(data)
test=heatmap.2(V3)
test=heatmap.2(As3)
library(ggplot2)
library(grofit)
library(dplyr)
library(reshape2)
library(data.table)
library(vegan)
#read in data by calling on files with "results" in the name, and combine all data from separate experiments
data=data.frame(do.call(rbind, lapply(list.files(pattern="*results"), read.csv)))
#remove unnecessary first column
data=data[-1]
#remove all model data since we are using spline
data=data[,-grep("model", names(data))]
data=data[,-grep(".bt", names(data))]
data=data[,-grep("log.", names(data))]
data=data[,-grep("nboot", names(data))]
#add binary column to describe yes/no growth
data$growth=as.integer(data$reliability=="TRUE")
#remove unnecessary reliability column
data=data[,-4]
#Average data for each variable before melting
data=data %>%
group_by(TestId, AddId, concentration) %>%
summarise(mu=mean(mu.spline),
A=mean(A.spline),
lambda=mean(lambda.spline),
integral=mean(integral.spline),
growth=mean(growth))
#Call samples with 1/3 growing no growth
data$growth[data$growth<0.4]=0
#Call parameters NA for no growth
data$A[data$growth==0]=NA
data$mu[data$growth==0]=NA
data$integral[data$growth==0]=NA
data$lambda[data$growth==0]=NA
#remove negative control data
data=data[!(data$TestId=="NEG"),]
#normalize data to growth without arsenic
normalization=subset(data, concentration %in% 0)
normalization=normalization[,-3]
data=inner_join(data, normalization, by = c("TestId", "AddId"))
data=data %>%
group_by(TestId, AddId, concentration) %>%
summarise(mu=mu.x/mu.y,
A=A.x/A.y,
lambda=lambda.x/lambda.y,
integral=integral.x/integral.y,
growth=growth.x)
#remove rows with no arsenic (controls)
data=data[!(data$concentration=="0"),]
#widen data set so that concentrations and their corresponding variables are listed horizontally
data=dcast(setDT(data), formula= TestId ~ AddId + concentration, value.var=c("mu", "A", "lambda", "integral", "growth"))
#make variable ID the row name
data=data.frame(data, row.names=data[,1])
#temporarily remove growth data (we do not need to scale this)
growth=data[,grep("growth", names(data))]
data=data.frame(data[,-grep("growth", names(data))])
#Scale data
V=scale(data)
#OR
A=decostand(data, method="standardize")
A2=cbind(A, growth)
#separate arsenate and arsenite
As3=A2[,!colnames(data) %in% grep("V", colnames(A2), value=TRUE)]
As5=A2[,!colnames(data) %in% grep("III", colnames(A2), value=TRUE)]
library(ggplot2)
library(grofit)
library(dplyr)
library(reshape2)
library(data.table)
library(vegan)
#read in data by calling on files with "results" in the name, and combine all data from separate experiments
data=data.frame(do.call(rbind, lapply(list.files(pattern="*results"), read.csv)))
#remove unnecessary first column
data=data[-1]
#remove all model data since we are using spline
data=data[,-grep("model", names(data))]
data=data[,-grep(".bt", names(data))]
data=data[,-grep("log.", names(data))]
data=data[,-grep("nboot", names(data))]
#add binary column to describe yes/no growth
data$growth=as.integer(data$reliability=="TRUE")
#remove unnecessary reliability column
data=data[,-4]
#Average data for each variable before melting
data=data %>%
group_by(TestId, AddId, concentration) %>%
summarise(mu=mean(mu.spline),
A=mean(A.spline),
lambda=mean(lambda.spline),
integral=mean(integral.spline),
growth=mean(growth))
#Call samples with 1/3 growing no growth
data$growth[data$growth<0.4]=0
#Call parameters NA for no growth
data$A[data$growth==0]=NA
data$mu[data$growth==0]=NA
data$integral[data$growth==0]=NA
data$lambda[data$growth==0]=NA
#remove negative control data
data=data[!(data$TestId=="NEG"),]
#normalize data to growth without arsenic
normalization=subset(data, concentration %in% 0)
normalization=normalization[,-3]
data=inner_join(data, normalization, by = c("TestId", "AddId"))
data=data %>%
group_by(TestId, AddId, concentration) %>%
summarise(mu=mu.x/mu.y,
A=A.x/A.y,
lambda=lambda.x/lambda.y,
integral=integral.x/integral.y,
growth=growth.x)
#remove rows with no arsenic (controls)
data=data[!(data$concentration=="0"),]
#widen data set so that concentrations and their corresponding variables are listed horizontally
data=dcast(setDT(data), formula= TestId ~ AddId + concentration, value.var=c("mu", "A", "lambda", "integral", "growth"))
#make variable ID the row name
data=data.frame(data, row.names=data[,1])
#temporarily remove growth data (we do not need to scale this)
growth=data[,grep("growth", names(data))]
data=data.frame(data[,-grep("growth", names(data))])
#Scale data
V=scale(data)
#OR
A=decostand(data, method="standardize")
A2=cbind(A, growth)
#separate arsenate and arsenite
As3=A2[,!colnames(data) %in% grep("V", colnames(A2), value=TRUE)]
As5=A2[,!colnames(data) %in% grep("III", colnames(A2), value=TRUE)]
hr=hclust(as.dist(1-cor(t(data), method="euclidean")), method="complete")
hr=hclust(as.dist(1-cor(t(data), method="spearman")), method="complete")
hr=hclust(as.dist(1-cor(t(data), method="kendall")), method="complete")
hr=hclust(as.dist(1-cor(t(data), method="pearson")), method="complete")
V2=dist(A2, diag=TRUE, upper=TRUE)
a=as.matrix(V2)
hc=hclust(V2)
heatmap.2(data, Rowv=as.dendogram(hc), Colv=as.dendrogram(hc), scale="row", density.info = "none", trace="none")
heatmap.2(data, Rowv=as.dendogram(hc), Colv=as.dendogram(hc), scale="row", density.info = "none", trace="none")
heatmap.2(data, Rowv=as.dendogram(hc), Colv=as.dendrogram(hc), scale="row", density.info = "none", trace="none")
heatmap.2(data, Rowv=as.dendrogram(hc), Colv=as.dendrogram(hc), scale="row", density.info = "none", trace="none")
heatmap.2(V2, Rowv=as.dendrogram(hc), Colv=as.dendrogram(hc), scale="row", density.info = "none", trace="none")
heatmap.2(a, Rowv=as.dendrogram(hc), Colv=as.dendrogram(hc), scale="row", density.info = "none", trace="none")
heatmap.2(a, Rowv=as.dendrogram(hc), Colv=as.dendrogram(hc), scale="row", density.info = "none", trace="none", col=bluered(20))
b=dist(As3, diag=TRUE, upper=TRUE)
c=as.matrix(b)
c=hclust(b)
heatmap.2(c, dendrogram = "row", trace="none", col=bluered(20))
b=dist(As3, diag=TRUE, upper=TRUE)
c=as.matrix(b)
c=hclust(b)
V3=heatmap(c)
b=dist(As3, diag=TRUE, upper=TRUE)
c=as.matrix(b)
heatmap.2(c, dendrogram = "row", trace="none", col=bluered(20))
b=dist(AsV, diag=TRUE, upper=TRUE)
b=dist(As5, diag=TRUE, upper=TRUE)
c=as.matrix(b)
heatmap.2(c, dendrogram = "row", trace="none", col=bluered(20))
mu=As5[,c(1:7)]
A=As5[,c(8:14)]
y=As5[,c(15:21)]
i=As5[,c(22:28)]
b=dist(mu, diag=TRUE, upper=TRUE)
c=as.matrix(b)
c=hclust(b)
heatmap.2(c, dendrogram = "row", trace="none", col=bluered(20))
b=dist(mu, diag=TRUE, upper=TRUE)
c=as.matrix(b)
heatmap.2(c, dendrogram = "row", trace="none", col=bluered(20))
b=dist(A, diag=TRUE, upper=TRUE)
c=as.matrix(b)
heatmap.2(c, dendrogram = "row", trace="none", col=bluered(20))
b=dist(y, diag=TRUE, upper=TRUE)
c=as.matrix(b)
heatmap.2(c, dendrogram = "row", trace="none", col=bluered(20))
b=dist(A2, diag=TRUE, upper=TRUE)
c=as.matrix(b)
heatmap.2(c, dendrogram = "row", trace="none", col=bluered(20))
